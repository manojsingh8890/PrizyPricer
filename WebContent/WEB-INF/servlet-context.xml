<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:security="http://www.springframework.org/schema/security"  
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:mvc="http://www.springframework.org/schema/mvc" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:aop="http://www.springframework.org/schema/aop" 
 xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       	http://www.springframework.org/schema/security
       	http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop.xsd">
      
      
   
	
	  <!-- Security Configuraion -->  	
	
	
    <!-- We can make this security feature when after creating  login and logout on application -->
    
	<!-- <security:http auto-config="true">
		<security:intercept-url pattern="/GetProductList/" access="ROLE_ADMIN" />	        
	</security:http> -->	 
	
   <!--  <security:authentication-manager>
	  <security:authentication-provider>
	    <security:user-service>
			<security:user name="manoj" password="abc" authorities="ROLE_ADMIN" />
	    </security:user-service>
	  </security:authentication-provider>
	</security:authentication-manager> -->
	
	
	 <!-- End Security Configuraion --> 
	
	
	<mvc:annotation-driven></mvc:annotation-driven>	
	<context:component-scan base-package="controller"></context:component-scan>
	<mvc:resources mapping="/resources/**" location="/resources/" /> 	  
	<context:component-scan base-package="com.org.test"></context:component-scan>	
	<!-- <context:component-scan base-package="daoImpl"></context:component-scan> -->
	  
	<!-- view Renderer Configuraion -->  
	  
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- End Renderer Configuraion --> 
	
	<!-- DataBase Configuraion -->  
	  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"  value="oracle.jdbc.driver.OracleDriver"></property>  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>  
        <property name="username" value="system"></property>  
        <property name="password" value="tiger"></property>  
	</bean>
	
	<!-- End DataBase Configuraion -->  
	
    <!-- Hibernate Configuraion --> 
	  
	<!-- Hibernate 3 Annotation SessionFactory Bean definition-->
	<bean id="hibernate3AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="annotatedClasses">
				<list>
					<value>com.org.test.beans.Product</value>					
				</list>
			</property>
			<property name="hibernateProperties">
				<props>					
					<prop key="hibernate.hbm2ddl.auto">update</prop>
					<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>					
					<prop key="hibernate.show_sql">false</prop>					
				</props>
			</property>
	</bean>
	
	<bean id="daoSupport" class="com.org.test.dao.DaoSupport">
		<property name="sessionFactory" ref="hibernate3AnnotatedSessionFactory" />
	</bean>
	
	<!-- End Hibernate Configuraion --> 
	
   
    <bean id="dao" class = "com.org.test.daoImpl.DaoImpl"></bean>    
    <bean id="productSev" class = "com.org.test.serviceImpl.ProductServiceImpl"></bean>    
    
</beans>